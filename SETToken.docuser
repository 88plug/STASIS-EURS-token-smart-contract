{
   "methods" : {
      "allowance(address,address)" : {
         "notice" : "Tell how many tokens given spender is currently allowed to transfer from\r given owner.\r "
      },
      "approve(address,uint256)" : {
         "notice" : "Allow given spender to transfer given number of tokens from message sender.\r "
      },
      "balanceOf(address)" : {
         "notice" : "Get number of tokens currently belonging to given owner.\r "
      },
      "burnTokens(uint256)" : {
         "notice" : "Burn tokens.\r "
      },
      "createTokens(uint256)" : {
         "notice" : "Create tokens.\r "
      },
      "decimals()" : {
         "notice" : "Get number of decimals for the token.\r "
      },
      "delegatedTransfer(address,uint256,uint256,uint256,uint8,bytes32,bytes32)" : {
         "notice" : "Transfer given number of token from the signed defined by digital signature\r to given recipient.\r "
      },
      "freezeTransfers()" : {
         "notice" : "Freeze token transfers.\r"
      },
      "name()" : {
         "notice" : "Get name of the token.\r "
      },
      "setFeeCollector(address)" : {
         "notice" : "Set fee collector.\r "
      },
      "setOwner(address)" : {
         "notice" : "Set smart contract owner.\r "
      },
      "symbol()" : {
         "notice" : "Get symbol of the token.\r "
      },
      "totalSupply()" : {
         "notice" : "Get total number of tokens in circulation.\r "
      },
      "transfer(address,uint256)" : {
         "notice" : "Transfer given number of tokens from message sender to given recipient.\r "
      },
      "transferFrom(address,address,uint256)" : {
         "notice" : "Transfer given number of tokens from given owner to given recipient.\r "
      },
      "unfreezeTransfers()" : {
         "notice" : "Unfreeze token transfers.\r"
      }
   }
}
