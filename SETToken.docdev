{
   "methods" : {
      "allowance(address,address)" : {
         "params" : {
            "_owner" : "address to get number of tokens allowed to be transferred\r       from the owner of\r",
            "_spender" : "address to get number of tokens allowed to be transferred\r       by the owner of\r"
         },
         "return" : "number of tokens given spender is currently allowed to transfer\r        from given owner\r"
      },
      "approve(address,uint256)" : {
         "params" : {
            "_spender" : "address to allow the owner of to transfer tokens from\r       message sender\r",
            "_value" : "number of tokens to allow to transfer\r"
         },
         "return" : "true if token transfer was successfully approved, false otherwise\r"
      },
      "balanceOf(address)" : {
         "params" : {
            "_owner" : "address to get number of tokens currently belonging to the\r       owner of\r"
         },
         "return" : "number of tokens currently belonging to the owner of given address\r"
      },
      "burnTokens(uint256)" : {
         "params" : {
            "_value" : "number of tokens to burn\r"
         }
      },
      "calculateFee(uint256)" : {
         "params" : {
            "_amount" : "transfer amount to calculate fee for\r"
         },
         "return" : "fee for transfer of given amount\r"
      },
      "createTokens(uint256)" : {
         "params" : {
            "_value" : "number of tokens to be created.\r"
         }
      },
      "decimals()" : {
         "return" : "number of decimals for the token\r"
      },
      "delegatedTransfer(address,uint256,uint256,uint256,uint8,bytes32,bytes32)" : {
         "params" : {
            "_fee" : "number of tokens to give to message sender\r",
            "_nonce" : "nonce of the transfer\r",
            "_r" : "parameter R of digital signature\r",
            "_s" : "parameter S of digital signature\r",
            "_to" : "address to transfer token to the owner of\r",
            "_v" : "parameter V of digital signature\r",
            "_value" : "number of tokens to transfer\r"
         }
      },
      "flags(address)" : {
         "params" : {
            "_address" : "address to get flags for\r"
         },
         "return" : "flags for given address\r"
      },
      "getFeeParameters()" : {
         "return" : "fee parameters\r"
      },
      "name()" : {
         "return" : "name of the token\r"
      },
      "nonce(address)" : {
         "params" : {
            "_owner" : "address of the token holder to get nonce for\r"
         },
         "return" : "current nonce for token holder with give address\r"
      },
      "setDelegate(address)" : {
         "params" : {
            "_delegate" : "address of smart contract to delegate execution of\r delegatable methods to, or zero to not delegate delegatable methods\r execution.\r"
         }
      },
      "setFeeCollector(address)" : {
         "params" : {
            "_newFeeCollector" : "address of the new fee collector\r"
         }
      },
      "setFeeParameters(uint256,uint256,uint256,uint256)" : {
         "params" : {
            "_fixedFee" : "fixed fee in token units\r",
            "_maxVariableFee" : "maximum variable fee in token units\r",
            "_minVariableFee" : "minimum variable fee in token units\r",
            "_variableFeeNumerator" : "variable fee numerator\r"
         }
      },
      "setFlags(address,uint256)" : {
         "params" : {
            "_address" : "address to set flags for\r",
            "_flags" : "flags to set\r"
         }
      },
      "setOwner(address)" : {
         "params" : {
            "_newOwner" : "address of the new owner\r"
         }
      },
      "symbol()" : {
         "return" : "symbol of the token\r"
      },
      "totalSupply()" : {
         "return" : "total number of tokens in circulation\r"
      },
      "transfer(address,uint256)" : {
         "params" : {
            "_to" : "address to transfer tokens to the owner of\r",
            "_value" : "number of tokens to transfer to the owner of given address\r"
         },
         "return" : "true if tokens were transferred successfully, false otherwise\r"
      },
      "transferFrom(address,address,uint256)" : {
         "params" : {
            "_from" : "address to transfer tokens from the owner of\r",
            "_to" : "address to transfer tokens to the owner of\r",
            "_value" : "number of tokens to transfer from given owner to given\r       recipient\r"
         },
         "return" : "true if tokens were transferred successfully, false otherwise\r"
      }
   }
}
